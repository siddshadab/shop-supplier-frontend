{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assesments\\\\react-material-admin-master\\\\react-material-admin-master\\\\src\\\\context\\\\UserContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport config from \"../\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar UserStateContext = /*#__PURE__*/React.createContext();\nvar UserDispatchContext = /*#__PURE__*/React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state,\n        isAuthenticated: true\n      };\n\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    default:\n      {\n        throw new Error(`Unhandled action type: ${action.type}`);\n      }\n  }\n}\n\nfunction UserProvider({\n  children\n}) {\n  _s();\n\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\")\n  });\n  return /*#__PURE__*/_jsxDEV(UserStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(UserDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"JbFtcA7N+PKQB3MNzBq0BDD9v/w=\");\n\n_c = UserProvider;\n\nfunction useUserState() {\n  _s2();\n\n  var context = React.useContext(UserStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\n_s2(useUserState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction useUserDispatch() {\n  _s3();\n\n  var context = React.useContext(UserDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n\n  return context;\n}\n\n_s3(useUserDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut }; // ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!login && !!password) {\n    setIsLoading(true);\n    localStorage.setItem(`email`, login);\n    axios.post(`${config.APP.APIURL}signin`, {\n      email: login,\n      password: password\n    }).then(res => {\n      console.log(res);\n      setIsLoading(false);\n\n      if (res.status === 400) {\n        failedNotify(res.data.message);\n      } else if (res.status === 500) {\n        failedNotify(\"Internal server error\");\n      } else if (res.status === 200) {\n        localStorage.setItem('id_token', res.data.token);\n        localStorage.setItem('user_id', res.data.userId);\n        dispatch({\n          type: 'LOGIN_SUCCESS'\n        });\n        history.push('/app/dashboard');\n      }\n    }).catch(error => {\n      console.log(error);\n      setIsLoading(false);\n      failedNotify(\"Incorrect Credentials\");\n    });\n  } else {\n    dispatch({\n      type: \"LOGIN_FAILURE\"\n    });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({\n    type: \"SIGN_OUT_SUCCESS\"\n  });\n  history.push(\"/login\");\n}\n\nfunction failedNotify(message) {\n  toast.error(message);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["D:/Assesments/react-material-admin-master/react-material-admin-master/src/context/UserContext.js"],"names":["React","axios","config","UserStateContext","createContext","UserDispatchContext","userReducer","state","action","type","isAuthenticated","Error","UserProvider","children","dispatch","useReducer","localStorage","getItem","useUserState","context","useContext","undefined","useUserDispatch","loginUser","signOut","login","password","history","setIsLoading","setError","setItem","post","APP","APIURL","email","then","res","console","log","status","failedNotify","data","message","token","userId","push","catch","error","removeItem","toast"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport config from \"../\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state, isAuthenticated: true };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, isAuthenticated: false };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\n\n// ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!login && !!password) {\n\n    setIsLoading(true);\n    localStorage.setItem(`email`, login);\n    axios\n      .post(`${config.APP.APIURL}signin`, {\n        email: login,\n        password: password,\n      })\n      .then((res) => {\n        console.log(res)\n        setIsLoading(false);\n        if (res.status === 400) {\n          failedNotify(res.data.message);\n        } else if (res.status === 500) {\n          failedNotify(\"Internal server error\");\n        } else if (res.status === 200) {                    \n          localStorage.setItem('id_token', res.data.token)\n          localStorage.setItem('user_id', res.data.userId)\n          dispatch({ type: 'LOGIN_SUCCESS' })\n          history.push('/app/dashboard')          \n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        setIsLoading(false);\n        failedNotify(\"Incorrect Credentials\");\n      });\n\n  } else {\n    dispatch({ type: \"LOGIN_FAILURE\" });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n\nfunction failedNotify(message){\n  toast.error(message);\n}"]},"metadata":{},"sourceType":"module"}