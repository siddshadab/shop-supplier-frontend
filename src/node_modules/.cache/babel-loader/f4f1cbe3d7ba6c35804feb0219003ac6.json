{"ast":null,"code":"require('dotenv').config();\n\nconst env_dev = require('./env_dev.json');\n\nconst env_prod = require('./env_prod.json');\n\nconst env_local = require('./env.json');\n\nconst loadEnvVariable = envName => {\n  var env;\n\n  if (envName === \"dev\") {\n    env = env_dev;\n  } else if (envName === \"prod\") {\n    env = env_prod;\n  } else {\n    env = env_local;\n  }\n\n  if (env == null) {\n    throw new Error(`Environment variable => ${envName} is undefined.`);\n  }\n\n  return env;\n};\n\nconst config = {\n  APP: {\n    APIURL: loadEnvVariable(process.env.ENV).APIURL || 'http://localhost:8080/api/v1/',\n    PORT: loadEnvVariable(process.env.ENV).PORT || 3003\n  }\n};\nmodule.exports = config;","map":{"version":3,"sources":["D:/Assesments/react-material-admin-master/react-material-admin-master/src/config.js"],"names":["require","config","env_dev","env_prod","env_local","loadEnvVariable","envName","env","Error","APP","APIURL","process","ENV","PORT","module","exports"],"mappings":"AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,OAAO,GAACF,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMG,QAAQ,GAAEH,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAMI,SAAS,GAAEJ,OAAO,CAAC,YAAD,CAAxB;;AAGA,MAAMK,eAAe,GAAGC,OAAO,IAAI;AACjC,MAAIC,GAAJ;;AACA,MAAGD,OAAO,KAAK,KAAf,EAAqB;AACnBC,IAAAA,GAAG,GAAGL,OAAN;AACH,GAFC,MAEI,IAAGI,OAAO,KAAK,MAAf,EAAsB;AACxBC,IAAAA,GAAG,GAAGJ,QAAN;AACH,GAFK,MAED;AACDI,IAAAA,GAAG,GAAEH,SAAL;AACH;;AACC,MAAIG,GAAG,IAAI,IAAX,EAAiB;AACf,UAAM,IAAIC,KAAJ,CAAW,2BAA0BF,OAAQ,gBAA7C,CAAN;AACD;;AACD,SAAOC,GAAP;AACD,CAbD;;AAeA,MAAMN,MAAM,GAAG;AAEbQ,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAGL,eAAe,CAACM,OAAO,CAACJ,GAAR,CAAYK,GAAb,CAAf,CAAiCF,MAAjC,IAA2C,+BADjD;AAEHG,IAAAA,IAAI,EAAIR,eAAe,CAACM,OAAO,CAACJ,GAAR,CAAYK,GAAb,CAAf,CAAiCC,IAAjC,IAAyC;AAF9C;AAFQ,CAAf;AASAC,MAAM,CAACC,OAAP,GAAiBd,MAAjB","sourcesContent":["require('dotenv').config()\r\nconst env_dev=require('./env_dev.json');\r\nconst env_prod =require('./env_prod.json');\r\nconst env_local =require('./env.json');\r\n\r\n\r\nconst loadEnvVariable = envName => {\r\n  var env\r\n  if(envName === \"dev\"){\r\n    env = env_dev;\r\n}else if(envName === \"prod\"){\r\n    env = env_prod;\r\n}else{\r\n    env =env_local;\r\n}\r\n  if (env == null) {\r\n    throw new Error(`Environment variable => ${envName} is undefined.`);\r\n  }\r\n  return env;\r\n};\r\n\r\nconst config = { \r\n  \r\n  APP: {\r\n    APIURL:  loadEnvVariable(process.env.ENV).APIURL || 'http://localhost:8080/api/v1/',    \r\n    PORT:   loadEnvVariable(process.env.ENV).PORT || 3003, \r\n  },\r\n};\r\n\r\n\r\nmodule.exports = config;\r\n"]},"metadata":{},"sourceType":"module"}